1.登录你的 Heroku 账号：
$ heroku login

2.添加 SSH Key 到 Heroku 上：
$ heroku keys:add

3.要将应用部署到 Heroku 上，我们还需要在 Laravel 项目下新建一个 Procfile 文件，
通过配置该文件来告诉 Heroku 应当使用什么命令来启动 Web 服务器。接着还需要将该文件纳入到 Git 版本控制中：
$ cd ~/Code/Laravel
$ echo web: vendor/bin/heroku-php-apache2 public/ > Procfile
$ git add -A
$ git commit -m "Procfile for Heroku"

4.我们可以使用 heroku create 命令在 Heroku 上创建一个新应用：
$ heroku create

5.你可以使用 heroku rename 来对应用名称进行更改，但要保证更改的名称未被其它人占用。如：
$ heroku rename your-app-name

6.Heroku 平台支持多种语言，在进行应用部署时，Heroku 会自动检查应用的代码是用什么语言写的，
然后再接着执行一系列针对该语言的操作来准备好程序运行环境。Laravel 应用默认会包含 package.json 文件，
但当 Heroku 检查到该文件时，它会认为此应用是用 Node.js 写的，
因此我们需要对应用的 buildpack 进行声明，告诉 Heroku 说我们的应用是用 PHP 写的。声明命令如下：
$ heroku buildpacks:set heroku/php

7.Laravel 使用 App Key 来完成对用户会话及其它信息的编码加密操作，因此我们也需要将 App Key 一同加入到 Heroku 的配置中。

首先，使用 Laravel 自带的 artisan 命令来生成 App Key
$ php artisan key:generate

将生成的 App Key 替换掉下面命令的 <your_app_key> ，并运行该命令行来完成配置：
$ heroku config:set APP_KEY=<your_app_key>

我们要做的最后一步就是将代码推送和部署到 Heroku 上：
$ git push heroku master

代码推送成功之后，可以使用此命令来快速打开线上应用：
$ heroku open
